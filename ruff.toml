# Configuración de Ruff
# Nivel de reglas: "E" (error), "W" (warning), "I" (info), "H" (hint)
select = [
    "E",  # Errores de pycodestyle
    "W",  # Warnings de pycodestyle
    "F",  # Pyflakes
    "I",  # isort
    "N",  # Nombres de variables según PEP 8
    "UP", # Actualizaciones de sintaxis de Python
    "YTT", # Pruebas de doctest
    "FBT", # Booleanos en funciones
    "Q",  # Comillas
    "RUF", # Reglas específicas de Ruff
]

# Reglas específicas a ignorar
ignore = [
    "E501",  # Línea demasiado larga
]

# Configuración específica de reglas
[src]
include = ["*.py"]

[pycodestyle]
max-line-length = 88

[isort]
known_first_party = ["app"]
line_length = 88

[flake8]
max-line-length = 88
extend-ignore = ["E203"]

[mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[per-file-ignores]
"tests/*" = ["S101"]
"**/migrations/*" = ["E501", "F401", "F821", "F403", "F405"]
"**/__init__.py" = ["F401"]

[task-tags]
"TODO" = "TODO"
"FIXME" = "FIXME"
"XXX" = "XXX"
"HACK" = "HACK"
"NOTE" = "NOTE"
"BUG" = "BUG"

# Configuración de formato
line-length = 88

# Tratar advertencias como errores
unfixable = []

# Excluir directorios
exclude = [
    ".git",
    ".mypy_cache",
    ".pytest_cache",
    ".ruff_cache",
    "__pycache__",
    "build",
    "dist",
    "migrations",
    "venv",
    ".venv",
]
